import { Video, VideoDetailed, Playlist, PlaylistDetailed, Channel, SearchOptions } from "./common/types";
export * from "./common/types";
export declare const scrapeYt: {
    /**
     * Search youtube for a list of  based on a search query.
     * @param query Search Query
     * @param options (optional) Option for search type and limit
     */
    search: (query: string, options?: SearchOptions) => Promise<(Video | Channel | Playlist)[]>;
    /**
     * Search youtube for playlist information.
     * @param playlistId Id of the playlist
     */
    getPlaylist: (playlistId: string) => Promise<{} | PlaylistDetailed>;
    /**
     * Search youtube for video information.
     * @param videoId Id of the video
     */
    getVideo: (videoId: string) => Promise<{} | VideoDetailed>;
    /**
     * Search youtube for related videos based on videoId .
     * @param videoId Id of the video
     * @param limit (optional) Max videos count
     */
    getRelated: (videoId: string, limit?: number) => Promise<Video[]>;
    /**
     * Search youtube for up next video based on videoId.
     * @param videoId Id of the video
     */
    getUpNext: (videoId: string) => Promise<{} | Video>;
};
